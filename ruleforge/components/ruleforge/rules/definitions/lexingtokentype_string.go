// Code generated by "stringer -type=LexingTokenType"; DO NOT EDIT.

package definitions

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IgnoreToken-0]
	_ = x[NewLineToken-1]
	_ = x[WhitespaceToken-2]
	_ = x[DigitToken-3]
	_ = x[LetterToken-4]
	_ = x[IdentifierKeyToken-5]
	_ = x[IdentifierValueToken-6]
	_ = x[CurlyBracketToken-7]
	_ = x[AssignmentOperatorToken-8]
	_ = x[ChainOperatorToken-9]
	_ = x[MetadataKeywordToken-10]
	_ = x[NameKeywordToken-11]
	_ = x[VersionKeywordToken-12]
	_ = x[StrictnessKeywordToken-13]
	_ = x[AllKeywordToken-14]
	_ = x[SoftKeywordToken-15]
	_ = x[SemiStrictKeywordToken-16]
	_ = x[StrictKeywordToken-17]
	_ = x[SuperStrictKeywordToken-18]
	_ = x[VariableKeywordToken-19]
	_ = x[DotToken-20]
}

const _LexingTokenType_name = "IgnoreTokenNewLineTokenWhitespaceTokenDigitTokenLetterTokenIdentifierKeyTokenIdentifierValueTokenCurlyBracketTokenAssignmentOperatorTokenChainOperatorTokenMetadataKeywordTokenNameKeywordTokenVersionKeywordTokenStrictnessKeywordTokenAllKeywordTokenSoftKeywordTokenSemiStrictKeywordTokenStrictKeywordTokenSuperStrictKeywordTokenVariableKeywordTokenDotToken"

var _LexingTokenType_index = [...]uint16{0, 11, 23, 38, 48, 59, 77, 97, 114, 137, 155, 175, 191, 210, 232, 247, 263, 285, 303, 326, 346, 354}

func (i LexingTokenType) String() string {
	if i < 0 || i >= LexingTokenType(len(_LexingTokenType_index)-1) {
		return "LexingTokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LexingTokenType_name[_LexingTokenType_index[i]:_LexingTokenType_index[i+1]]
}
